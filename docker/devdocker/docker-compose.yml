version: '3.7'

networks:
  frontend:
    driver: ${NETWORKS_DRIVER}
  backend:
    driver: ${NETWORKS_DRIVER}

services:

  # dotnet:
  #   image:
  #     context: ./dotnet
  #   ports:
  #     - "${DOTNET_PORT}:80"
  #   tty: true
  #   volumes:
  #     - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
  #   extra_hosts:
  #     - "dockerhost:${DOCKER_HOST_IP}"
  #   networks:
  #     - backend

  # redis:
  #   build: redis:latest
  #   volumes:
  #     - .devdocker/redis.conf:/usr/local/etc/redis/redis.conf
  #     - .devdocker/redis:/data
  #   ports:
  #     - 6379:6379"
  #   networks:
  #     - backend

  postgres:
    build:
      context: .
      dockerfile: ./postgresql/Dockerfile
    image: sead_query_api_postgres_dev
    container_name: sead_query_api_postgres_dev
    restart: on-failure
    volumes:
      - pgdata:/var/lib/postgresql/data
      - pgconf:/etc/postgresql
      - pglog:/var/log/postgresql
    ports:
      - "${POSTGRES_PORT}:5432"
    env_file: .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - backend

volumes:
  pgdata:
    driver: local
  pgconf:
    driver: local
  pglog:
    driver: local

  # pgadmin:
  #   image: dpage/pgadmin4:latest
  #   environment:
  #     - "PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}"
  #     - "PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}"
  #   ports:
  #     - "${PGADMIN_PORT}:80"
  #   volumes:
  #     - ${DATA_PATH_HOST}/pgadmin:/var/lib/pgadmin
  #   depends_on:
  #     - postgres
  #   networks:
  #     - frontend
  #     - backend